// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/pdfservice.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PDFRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HtmlContent   *string                `protobuf:"bytes,1,opt,name=html_content,json=htmlContent" json:"html_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PDFRequest) Reset() {
	*x = PDFRequest{}
	mi := &file_proto_pdfservice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDFRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDFRequest) ProtoMessage() {}

func (x *PDFRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdfservice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDFRequest.ProtoReflect.Descriptor instead.
func (*PDFRequest) Descriptor() ([]byte, []int) {
	return file_proto_pdfservice_proto_rawDescGZIP(), []int{0}
}

func (x *PDFRequest) GetHtmlContent() string {
	if x != nil && x.HtmlContent != nil {
		return *x.HtmlContent
	}
	return ""
}

type PDFResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PdfContent    []byte                 `protobuf:"bytes,1,opt,name=pdf_content,json=pdfContent" json:"pdf_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PDFResponse) Reset() {
	*x = PDFResponse{}
	mi := &file_proto_pdfservice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PDFResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PDFResponse) ProtoMessage() {}

func (x *PDFResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pdfservice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PDFResponse.ProtoReflect.Descriptor instead.
func (*PDFResponse) Descriptor() ([]byte, []int) {
	return file_proto_pdfservice_proto_rawDescGZIP(), []int{1}
}

func (x *PDFResponse) GetPdfContent() []byte {
	if x != nil {
		return x.PdfContent
	}
	return nil
}

var File_proto_pdfservice_proto protoreflect.FileDescriptor

const file_proto_pdfservice_proto_rawDesc = "" +
	"\n" +
	"\x16proto/pdfservice.proto\x12\n" +
	"pdfservice\"/\n" +
	"\n" +
	"PDFRequest\x12!\n" +
	"\fhtml_content\x18\x01 \x01(\tR\vhtmlContent\".\n" +
	"\vPDFResponse\x12\x1f\n" +
	"\vpdf_content\x18\x01 \x01(\fR\n" +
	"pdfContent2L\n" +
	"\n" +
	"PDFService\x12>\n" +
	"\vGeneratePDF\x12\x16.pdfservice.PDFRequest\x1a\x17.pdfservice.PDFResponseB\n" +
	"Z\bproto/pbb\beditionsp\xe8\a"

var (
	file_proto_pdfservice_proto_rawDescOnce sync.Once
	file_proto_pdfservice_proto_rawDescData []byte
)

func file_proto_pdfservice_proto_rawDescGZIP() []byte {
	file_proto_pdfservice_proto_rawDescOnce.Do(func() {
		file_proto_pdfservice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pdfservice_proto_rawDesc), len(file_proto_pdfservice_proto_rawDesc)))
	})
	return file_proto_pdfservice_proto_rawDescData
}

var file_proto_pdfservice_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_pdfservice_proto_goTypes = []any{
	(*PDFRequest)(nil),  // 0: pdfservice.PDFRequest
	(*PDFResponse)(nil), // 1: pdfservice.PDFResponse
}
var file_proto_pdfservice_proto_depIdxs = []int32{
	0, // 0: pdfservice.PDFService.GeneratePDF:input_type -> pdfservice.PDFRequest
	1, // 1: pdfservice.PDFService.GeneratePDF:output_type -> pdfservice.PDFResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_pdfservice_proto_init() }
func file_proto_pdfservice_proto_init() {
	if File_proto_pdfservice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pdfservice_proto_rawDesc), len(file_proto_pdfservice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pdfservice_proto_goTypes,
		DependencyIndexes: file_proto_pdfservice_proto_depIdxs,
		MessageInfos:      file_proto_pdfservice_proto_msgTypes,
	}.Build()
	File_proto_pdfservice_proto = out.File
	file_proto_pdfservice_proto_goTypes = nil
	file_proto_pdfservice_proto_depIdxs = nil
}
